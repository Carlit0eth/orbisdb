"use strict";(()=>{var e={};e.id=904,e.ids=[904],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},7244:(e,t,s)=>{s.r(t),s.d(t,{config:()=>g,default:()=>p,routeModule:()=>x});var n={};s.r(n),s.d(n,{default:()=>handler});var i=s(9762),o=s(6059),r=s(4718),l=s(7147),a=s.n(l),u=s(1017),d=s.n(u);require("react");let c=d().resolve(process.cwd(),"orbisdb-settings.json");async function handler(e,t){if("POST"===e.method){let{plugin_id:s,path:n,variables:i,context_id:o}=e.body;console.log("plugin_id:",s),console.log("path:",n);try{if(!a().existsSync(c))throw Error("Settings file does not exist");let e=JSON.parse(a().readFileSync(c,"utf8")),r=e.plugins?.findIndex(e=>e.plugin_id===s);if(-1===r)throw Error("Plugin not found");let l=-1;if(e.plugins&&e.plugins.length>0&&e.plugins[r]?.contexts&&(l=e.plugins[r].contexts.findIndex(e=>e.context===o)),-1===l){let t={path:n,context:n[n.length-1]};Object.keys(i).length>0&&(t.variables=i),e.plugins[r].contexts?e.plugins[r].contexts.push(t):e.plugins[r].contexts=[t]}else e.plugins[r].contexts[l].variables=i;console.log("settings:",e),a().writeFileSync(c,JSON.stringify(e,null,2)),t.status(200).json({message:"Context updated successfully",settings:e})}catch(e){console.error(e),t.status(500).json({error:"Failed to update settings."})}}else t.status(405).json({error:`Method '${e.method}' Not Allowed`})}let p=(0,r.l)(n,"default"),g=(0,r.l)(n,"config"),x=new i.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/settings/assign-context",pathname:"/api/settings/assign-context",bundlePath:"",filename:""},userland:n})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[836],()=>__webpack_exec__(7244));module.exports=s})();