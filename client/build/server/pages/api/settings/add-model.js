"use strict";(()=>{var e={};e.id=401,e.ids=[401],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},9133:(e,t,s)=>{s.r(t),s.d(t,{config:()=>g,default:()=>p,routeModule:()=>f});var o={};s.r(o),s.d(o,{default:()=>handler});var r=s(9762),i=s(6059),d=s(4718),l=s(7147),n=s.n(l),a=s(1017),u=s.n(a);let c=u().resolve(process.cwd(),"orbisdb-settings.json");async function handler(e,t){if("POST"===e.method){let{model:s}=e.body;try{if(!n().existsSync(c))throw Error("Settings file does not exist");let e=JSON.parse(n().readFileSync(c,"utf8"));e.models=[...e.models,s],console.log("New settings:",e),n().writeFileSync(c,JSON.stringify(e,null,2)),t.status(200).json({status:200,settings:e,result:"Model added to the settings file."})}catch(e){console.error(e),t.status(500).json({error:"Failed to update settings."})}}else t.status(405).json({error:`Method '${e.method}' Not Allowed`})}console.log("settingsFilePath:",c);let p=(0,d.l)(o,"default"),g=(0,d.l)(o,"config"),f=new r.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/settings/add-model",pathname:"/api/settings/add-model",bundlePath:"",filename:""},userland:o})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[836],()=>__webpack_exec__(9133));module.exports=s})();