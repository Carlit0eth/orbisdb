"use strict";(()=>{var e={};e.id=479,e.ids=[479],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},5126:(e,t,s)=>{s.r(t),s.d(t,{config:()=>c,default:()=>g,routeModule:()=>f});var i={};s.r(i),s.d(i,{default:()=>handler});var n=s(9762),r=s(6059),l=s(4718),o=s(7147),a=s.n(o),d=s(1017),u=s.n(d);let p=u().resolve(process.cwd(),"orbisdb-settings.json");async function handler(e,t){if("POST"===e.method){let{plugin:s}=e.body;console.log("Trying to add:",s);try{if(!a().existsSync(p))throw Error("Settings file does not exist");let e=JSON.parse(a().readFileSync(p,"utf8")),i=function(e,t){let s=e.plugins.findIndex(e=>e.plugin_id===t.plugin_id);return -1!==s?e.plugins[s].variables=t.variables:e.plugins=[...e.plugins,t],e}(e,s);console.log("New settings:",i),a().writeFileSync(p,JSON.stringify(i,null,2)),t.status(200).json({status:200,updatedSettings:i,result:"New plugin added to the settings file."})}catch(e){console.error(e),t.status(500).json({error:"Failed to update settings."})}}else t.status(405).json({error:`Method '${e.method}' Not Allowed`})}console.log("settingsFilePath:",p);let g=(0,l.l)(i,"default"),c=(0,l.l)(i,"config"),f=new n.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/settings/install-plugin",pathname:"/api/settings/install-plugin",bundlePath:"",filename:""},userland:i})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[836],()=>__webpack_exec__(5126));module.exports=s})();